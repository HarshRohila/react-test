{"version":3,"sources":["components/Navbar.tsx","components/Course.tsx","components/Loader.tsx","hooks/useAsync.ts","pages/Dashboard.tsx","forms/LoginForm/validation.ts","utils/newId.ts","ui/input/index.tsx","ui/Button.tsx","forms/UserForm.tsx","constants.ts","forms/RegisterForm.tsx","pages/Home.tsx","utils/api.ts","forms/LoginForm/index.tsx","pages/LoginPage.tsx","pages/Payment.tsx","AppRouter.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Navbar","useState","useEffect","className","href","Course","course","style","width","src","thumbnailURL","alt","title","price","to","Loader","icon","faSpinner","spin","useAsync","asyncFunction","immediate","status","setStatus","value","setValue","error","setError","execute","useCallback","then","response","catch","Dashboard","getCourses","courses","a","fetch","res","json","Courses","map","id","LoginValidation","Yup","shape","email","required","password","min","max","lastId","Input","field","label","props","newId","htmlFor","Button","children","initialValue","UserForm","onSubmit","isSubmitLoading","initialValues","validationSchema","errors","touched","component","type","name","API_URL","creatUser","loginCreds","axios","post","RegisterForm","Home","api","create","baseURL","withCredentials","LoginForm","login","navigate","useNavigate","err","alert","console","LoginPage","Payment","AppRouter","RouterPage","path","pageComponent","AuthRouterPage","getLoggedInUser","get","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8f8a1d00.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\n\ntype NavbarProps = {};\n\nexport const Navbar = ({}: NavbarProps) => {\n\tconst [state, setState] = useState();\n\n\tuseEffect(() => {}, []);\n\n\treturn (\n\t\t<>\n\t\t\t<nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n\t\t\t\t<div className=\"container-fluid\">\n\t\t\t\t\t<a className=\"navbar-brand\" href=\"#\">\n\t\t\t\t\t\tFullstack Test\n\t\t\t\t\t</a>\n\t\t\t\t</div>\n\t\t\t</nav>\n\t\t</>\n\t);\n};\n","import { Link } from '@reach/router';\nimport React, { useEffect, useState } from 'react';\n\ntype CourseProps = {\n\tcourse: Course;\n};\n\nexport interface Course {\n\tid: string;\n\ttitle: string;\n\tthumbnailURL: string;\n\tprice: string;\n}\n\nexport const Course = ({ course }: CourseProps) => {\n\tconst [state, setState] = useState();\n\n\tuseEffect(() => {}, []);\n\n\treturn (\n\t\t<>\n\t\t\t<div className=\"card\" style={{ width: '18rem' }}>\n\t\t\t\t<img\n\t\t\t\t\tclassName=\"card-img-top\"\n\t\t\t\t\tsrc={course.thumbnailURL}\n\t\t\t\t\talt={course.title}\n\t\t\t\t/>\n\t\t\t\t<div className=\"card-body\">\n\t\t\t\t\t<h5 className=\"card-title\">{course.title}</h5>\n\t\t\t\t\t<p className=\"card-text\">{course.price}</p>\n\t\t\t\t\t<nav>\n\t\t\t\t\t\t<Link className=\"btn btn-primary\" to=\"/payment\">\n\t\t\t\t\t\t\tBuy\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t</nav>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</>\n\t);\n};\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSpinner } from '@fortawesome/free-solid-svg-icons';\n\ntype LoaderProps = {};\n\nexport const Loader = ({}: LoaderProps) => {\n\treturn (\n\t\t<>\n\t\t\t<FontAwesomeIcon icon={faSpinner} spin />\n\t\t</>\n\t);\n};\n","import { useState, useCallback, useEffect } from 'react';\n\nconst useAsync = <T, E = string>(\n\tasyncFunction: (...args: any[]) => Promise<T>,\n\timmediate = true\n) => {\n\tconst [status, setStatus] = useState<\n\t\t'idle' | 'pending' | 'success' | 'error'\n\t>('idle');\n\tconst [value, setValue] = useState<T | null>(null);\n\tconst [error, setError] = useState<E | null>(null);\n\n\t// The execute function wraps asyncFunction and\n\t// handles setting state for pending, value, and error.\n\t// useCallback ensures the below useEffect is not called\n\t// on every render, but only if asyncFunction changes.\n\tconst execute = useCallback(\n\t\t(...args) => {\n\t\t\tsetStatus('pending');\n\t\t\tsetValue(null);\n\t\t\tsetError(null);\n\n\t\t\treturn asyncFunction(...args)\n\t\t\t\t.then((response: any) => {\n\t\t\t\t\tsetValue(response);\n\t\t\t\t\tsetStatus('success');\n\t\t\t\t})\n\t\t\t\t.catch((error: any) => {\n\t\t\t\t\tsetError(error);\n\t\t\t\t\tsetStatus('error');\n\t\t\t\t});\n\t\t},\n\t\t[asyncFunction]\n\t);\n\n\t// Call execute if we want to fire it right away.\n\t// Otherwise execute can be called later, such as\n\t// in an onClick handler.\n\tuseEffect(() => {\n\t\tif (immediate) {\n\t\t\texecute();\n\t\t}\n\t}, [execute, immediate]);\n\n\treturn { execute, status, value, error };\n};\n\nexport default useAsync;\n","import React from 'react';\nimport { Course } from '../components/Course';\nimport { Loader } from '../components/Loader';\nimport { VideoPlayer } from '../components/VideoPlayer';\nimport useAsync from '../hooks/useAsync';\n\ntype DashboardProps = {};\n\nexport const Dashboard = ({}: DashboardProps) => {\n\tconst { status, value } = useAsync(getCourses);\n\treturn (\n\t\t<>\n\t\t\t{status === 'pending' && <Loader />}\n\t\t\t{status === 'success' && <Courses courses={value} />}\n\t\t</>\n\t);\n};\n\nasync function getCourses() {\n\treturn fetch(\n\t\t'https://s3-ap-southeast-1.amazonaws.com/he-public-data/courses26269ff.json'\n\t).then((res) => res.json());\n}\n\nconst Courses = ({ courses }: any) => {\n\treturn (\n\t\t<>\n\t\t\t{courses.map((course: Course) => (\n\t\t\t\t<Course key={course.id} course={course} />\n\t\t\t))}\n\t\t</>\n\t);\n};\n","import * as Yup from 'yup';\n\nconst LoginValidation = Yup.object().shape({\n\temail: Yup.string().email('Invalid email').required('Required'),\n\n\tpassword: Yup.string()\n\t\t.min(8, 'Too Short!')\n\t\t.max(50, 'Too Long!')\n\t\t.required('Required'),\n});\n\nexport default LoginValidation;\n","let lastId = 0;\n\nexport default function newId(prefix = 'id') {\n\tlastId++;\n\treturn `${prefix}${lastId}`;\n}\n","import React, { useState } from 'react';\nimport newId from '../../utils/newId';\n\ntype InputProps = {\n\tlabel: string;\n\tfield: any;\n};\n\nexport const Input = ({ field, label, ...props }: InputProps) => {\n\tconst [id] = useState(newId());\n\n\treturn (\n\t\t<>\n\t\t\t<div className=\"mb-3\">\n\t\t\t\t{label && (\n\t\t\t\t\t<label htmlFor={id} className=\"form-label\">\n\t\t\t\t\t\t{label}\n\t\t\t\t\t</label>\n\t\t\t\t)}\n\t\t\t\t<input className=\"form-control\" id={id} {...field} {...props} />\n\t\t\t</div>\n\t\t</>\n\t);\n};\n","import React, { useEffect, useState } from 'react';\n\ntype ButtonProps = {\n\tchildren: any;\n\ttype: any;\n};\n\nexport const Button = ({ children, ...props }: ButtonProps) => {\n\treturn (\n\t\t<>\n\t\t\t<button className=\"btn btn-primary\" {...props}>\n\t\t\t\t{children}\n\t\t\t</button>\n\t\t</>\n\t);\n};\n","import React, { useEffect, useState } from 'react';\nimport { Field, Form, Formik } from 'formik';\nimport LoginValidation from './LoginForm/validation';\nimport { Input } from '../ui/input';\nimport { Button } from '../ui/Button';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSpinner } from '@fortawesome/free-solid-svg-icons';\nconst initialValue = {\n\temail: '',\n\tpassword: '',\n};\n\ntype UserFormProps = {\n\tonSubmit: (loginCreds: typeof initialValue) => void;\n\tisSubmitLoading?: boolean;\n};\n\nexport const UserForm = ({ onSubmit, isSubmitLoading }: UserFormProps) => {\n\treturn (\n\t\t<div className=\"card\">\n\t\t\t<div className=\"card-body\">\n\t\t\t\t<Formik\n\t\t\t\t\tinitialValues={initialValue}\n\t\t\t\t\tvalidationSchema={LoginValidation}\n\t\t\t\t\tonSubmit={onSubmit}\n\t\t\t\t>\n\t\t\t\t\t{({ errors, touched }) => (\n\t\t\t\t\t\t<Form>\n\t\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\t\tcomponent={Input}\n\t\t\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\t\tlabel=\"Email\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t{errors.email && touched.email ? <div>{errors.email}</div> : null}\n\t\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\t\tcomponent={Input}\n\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\t\t\tlabel=\"Password\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t{errors.password && touched.password ? (\n\t\t\t\t\t\t\t\t<div>{errors.password}</div>\n\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t\t<Button type=\"submit\">\n\t\t\t\t\t\t\t\tSubmit\n\t\t\t\t\t\t\t\t{isSubmitLoading && <FontAwesomeIcon icon={faSpinner} spin />}\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</Form>\n\t\t\t\t\t)}\n\t\t\t\t</Formik>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport type LoginCreds = typeof initialValue;\n","export const API_URL = 'http://localhost:4000/api';\n","import React, { useEffect, useState } from 'react';\nimport { UserForm } from './UserForm';\nimport axios from 'axios';\nimport useAsync from '../hooks/useAsync';\nimport { API_URL } from '../constants';\n\ntype RegisterFormProps = {};\n\ninterface LoginCreds {\n\temail: string;\n\tpassword: string;\n}\n\nasync function creatUser(loginCreds: LoginCreds) {\n\treturn axios.post(`${API_URL}/users`, loginCreds);\n}\n\nexport const RegisterForm = ({}: RegisterFormProps) => {\n\tconst { execute } = useAsync(creatUser, false);\n\n\tfunction handleSubmit(loginCreds: LoginCreds) {\n\t\texecute(loginCreds);\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<h1>Register</h1>\n\t\t\t<UserForm onSubmit={handleSubmit} />\n\t\t</>\n\t);\n};\n","import React from 'react';\nimport { LoginForm } from '../forms/LoginForm';\nimport { Link } from '@reach/router';\nimport { RegisterForm } from '../forms/RegisterForm';\n\ntype HomeProps = {};\n\nexport const Home = ({}: HomeProps) => {\n\treturn (\n\t\t<>\n\t\t\t<div className=\"container-fluid\">\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t<div className=\"col\">\n\t\t\t\t\t\t<RegisterForm />\n\t\t\t\t\t\t<nav>\n\t\t\t\t\t\t\t<Link to=\"login\">Already registered? Log in</Link>\n\t\t\t\t\t\t</nav>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<nav>\n\t\t\t\t\t<Link to=\"dashboard\">Dashboard</Link>\n\t\t\t\t</nav>\n\t\t\t</div>\n\t\t</>\n\t);\n};\n","import axios from 'axios';\nimport { API_URL } from '../constants';\n\nconst api = axios.create({\n\tbaseURL: API_URL,\n\twithCredentials: true,\n});\n\nexport default api;\n","import React from 'react';\nimport useAsync from '../../hooks/useAsync';\nimport { LoginCreds, UserForm } from '../UserForm';\nimport { Link, useNavigate } from '@reach/router';\nimport api from '../../utils/api';\n\ntype LoginFormProps = {};\n\nexport const LoginForm = ({}: LoginFormProps) => {\n\tconst { execute, status } = useAsync(login, false);\n\tconst navigate = useNavigate();\n\n\tfunction handleSubmit(loginCreds: LoginCreds) {\n\t\texecute(loginCreds)\n\t\t\t.then(() => {\n\t\t\t\tnavigate('dashboard');\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\talert('Login Failed');\n\t\t\t\tconsole.error(err);\n\t\t\t});\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<h1>Login</h1>\n\t\t\t<UserForm\n\t\t\t\tonSubmit={handleSubmit}\n\t\t\t\tisSubmitLoading={status === 'pending'}\n\t\t\t/>\n\t\t\t<nav>\n\t\t\t\t<Link to=\"/\">New User? Register</Link>\n\t\t\t</nav>\n\t\t</>\n\t);\n};\n\nasync function login(loginCreds: LoginCreds) {\n\treturn api.post(`/auth/login`, loginCreds);\n}\n","import React from 'react';\nimport { LoginForm } from '../forms/LoginForm';\n\ntype LoginPageProps = {};\n\nexport const LoginPage = ({}: LoginPageProps) => {\n\treturn (\n\t\t<>\n\t\t\t<div className=\"container-fluid\">\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t<LoginForm />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</>\n\t);\n};\n","import React, { useEffect, useState } from 'react';\n\ntype PaymentProps = {};\n\nexport const Payment = ({}: PaymentProps) => {\n\tconst [state, setState] = useState();\n\n\tuseEffect(() => {}, []);\n\n\treturn (\n\t\t<>\n\t\t\t<h1>React TS FC Component</h1>\n\t\t\t<div>List</div>\n\t\t</>\n\t);\n};\n","import React from 'react';\nimport { Router, Link, RouteComponentProps, useNavigate } from '@reach/router';\nimport { Dashboard } from './pages/Dashboard';\nimport { Home } from './pages/Home';\nimport { LoginPage } from './pages/LoginPage';\nimport api from './utils/api';\nimport { Loader } from './components/Loader';\nimport useAsync from './hooks/useAsync';\nimport { Payment } from './pages/Payment';\n\ntype AppRouterProps = {};\n\nexport const AppRouter = ({}: AppRouterProps) => {\n\treturn (\n\t\t<Router>\n\t\t\t<RouterPage path=\"/\" pageComponent={<Home />} />\n\t\t\t<AuthRouterPage path=\"dashboard\" pageComponent={<Dashboard />} />\n\t\t\t<AuthRouterPage path=\"payment\" pageComponent={<Payment />} />\n\t\t\t<RouterPage path=\"login\" pageComponent={<LoginPage />} />\n\t\t</Router>\n\t);\n};\n\nconst RouterPage = (\n\tprops: { pageComponent: JSX.Element } & RouteComponentProps\n) => {\n\treturn props.pageComponent;\n};\n\nconst AuthRouterPage = (\n\tprops: { pageComponent: JSX.Element } & RouteComponentProps\n) => {\n\tconst { status } = useAsync(getLoggedInUser);\n\tconst navigate = useNavigate();\n\n\treturn (\n\t\t<>\n\t\t\t{status === 'pending' && <Loader />}\n\t\t\t{status === 'success' && props.pageComponent}\n\t\t\t{status === 'error' && navigate('/login') && <></>}\n\t\t</>\n\t);\n};\n\nasync function getLoggedInUser() {\n\treturn api.get(`/users/me`);\n}\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.scss';\nimport { LoginForm } from './forms/LoginForm';\nimport { Navbar } from './components/Navbar';\nimport { AppRouter } from './AppRouter';\nimport axios from 'axios';\nimport { API_URL } from './constants';\nimport useAsync from './hooks/useAsync';\nimport api from './utils/api';\n\nfunction App() {\n\t// const { value } = useAsync(getLoggedInUser);\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<Navbar />\n\t\t\t<AppRouter />\n\t\t</div>\n\t);\n}\n\n// async function getLoggedInUser() {\n// \treturn api.get(`/users/me`);\n// }\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/scss/bootstrap.scss';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { AppRouter } from './AppRouter';\nimport { Navbar } from './components/Navbar';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}